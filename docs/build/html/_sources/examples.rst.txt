Examples
===================================

A library for synthetic spectra of inhomogenous stellar surfaces.

Here are some examples demonstrating key capabilities of SPICE:

Synthetic Photometry
--------------------

SPICE can generate synthetic photometry for various passbands:

.. code-block:: python

    from spice.spectrum.filter import BesselU, BesselB, BesselV, Bolometric, GaiaG
    from spice.spectrum.spectrum import AB_passband_luminosity, luminosity

    # Calculate passband luminosities at 10 pc
    luminosities = np.array([luminosity(bb.flux, mps1, vws) for mps1 in mps])

    filters = [BesselU(), BesselB(), BesselV(), Bolometric(), GaiaG()]
    passband_lums = [np.array([AB_passband_luminosity(f, vws, flux[:, 0]) for flux in specs]) for f in filters]

Binary Star Modeling
--------------------

SPICE can be used in conjunction with PHOEBE for binary star modeling:

.. code-block:: python

    import phoebe
    import numpy as np
    import matplotlib.pyplot as plt

    # Create a binary system model
    b = phoebe.default_binary()

    # Compute velocities and light curves
    times = np.linspace(0, 1, 101)
    b.add_dataset('lc', times=times, passband='Johnson:V')
    b.add_dataset('rv', times=times)
    b.run_compute(irrad_method='none')

    # Plot results
    plt.figure(figsize=(10, 6))
    plt.plot(times, b['rv@primary'].model, label='Primary RV')
    plt.plot(times, b['rv@secondary'].model, label='Secondary RV')
    plt.plot(times, b['lc01'].model, label='Light Curve')
    plt.xlabel('Time [days]')
    plt.ylabel('Normalized Values')
    plt.legend()
    plt.show()

Stellar Rotation
----------------

SPICE can model the effects of stellar rotation:

.. code-block:: python

    import numpy as np
    import matplotlib.pyplot as plt
    from spice.model import BlackBody
    from spice.geometry import SphericalGrid

    # Create a rotating black body model
    grid = SphericalGrid(100, 100)
    model = BlackBody(grid, temperature=5772)
    model.add_rotation(period=25)

    # Generate spectra at different time steps
    times = np.linspace(0, 1, 10)
    specs = [model.spectrum(t) for t in times]

    # Plot spectra
    plt.figure()
    for spec in specs:
        plt.plot(model.wavelengths, spec)
    plt.xlabel('Wavelength [Å]')
    plt.ylabel('Flux [erg/s/cm²/Å]')
    plt.show()

Stellar Pulsation
-----------------

SPICE can simulate stellar pulsations:

.. code-block:: python

    from spice.model import BlackBody
    from spice.geometry import SphericalGrid
    import numpy as np

    # Create a pulsating black body model
    grid = SphericalGrid(100, 100)
    model = BlackBody(grid, temperature=5772)
    model.add_pulsation(amplitude=0.1, frequency=1)

    # Generate spectra over time
    times = np.linspace(0, 1, 100)
    specs = [model.spectrum(t) for t in times]

    # Calculate luminosity variations
    luminosities = np.array([np.sum(spec) for spec in specs])

Solar Luminosity Calculation
----------------------------

SPICE can be used to calculate theoretical stellar luminosities:

.. code-block:: python

    import astropy.units as u
    import jax.numpy as jnp

    # Calculate theoretical solar luminosity
    sigma = (5.67e-8 * u.W / (u.m**2) / (u.K**4)).to(u.erg / (u.cm**2) / (u.s) / (u.K**4))
    solar_luminosity = 0.9997011 * jnp.sum(model.areas) * (u.solRad.to(u.cm)**2) * sigma * (5772*u.K)**4

    print(f"Theoretical luminosity of the Sun: {solar_luminosity:.3e} erg/s")

These examples showcase some of the key features of SPICE, including synthetic photometry, binary star modeling, stellar rotation and pulsation simulations, and theoretical luminosity calculations.

